{
	"$schema": "https://raw.githubusercontent.com/denoland/deno/refs/tags/v2.0.2/cli/schemas/config-file.v1.json",
	"name": "@aero/proxy",
	"version": "0.0.6",
	"license": "AGPL-3.0-or-later",
	"exports": "./extras/deno/denoPath.ts",
	"publish": {
		"exports": "./extras/deno/denoPath.ts",
		"include": [
			"scripts/**/*.ts",
			"src/AeroSandbox/scripts/**/*.ts",
			"dist/**/*",
			"tests/**",
			"LICENSE",
			"README.md"
		],
		"exclude": ["!dist/", "src/AeroSandbox/scripts/runtime/**/*.ts"]
	},
	"tasks": {
		"push": "deno run lint && deno run format && git push",
		"lint": "deno run lintSW && deno run lintSandbox",
		"lintSW": "deno run lintBiomeSW && deno run lintDenoSW",
		"lintBiomeSW": "biome lint --write",
		"lintDenoSW": "deno lint --compact --fix",
		"lintSandbox": "deno run lintBiomeSandbox && deno run lintDenoSandbox",
		"lintBiomeSandbox": "cd src/AeroSandbox && biome lint --write",
		"lintDenoSandbox": "cd src/AeroSandbox && deno lint --compact --fix",
		"format": "deno run formatSW && deno run formatSandbox",
		"formatSW": "deno run formatBiomeSW && deno run formatDenoSW",
		"formatBiomeSW": "biome format --write",
		"formatDenoSW": "deno fmt",
		"formatSandbox": "deno run formatBiomeSandbox && deno run formatDenoSandbox",
		"formatBiomeSandbox": "cd src/AeroSandbox && deno fmt",
		"formatDenoSandbox": "cd src/AeroSandbox && deno fmt",
		"rsdoctor": "deno run rsdoctorSW & deno run rsdoctorSandbox &",
		"rsdoctorSW": "kill $(lsof -t -i:3300) & rsdoctor analyze --profile dist/debug/sw/.rsdoctor/manifest.json --port 3300",
		"rsdoctorSandbox": "kill $(lsof -t -i:3301) & rsdoctor analyze --profile src/AeroSandbox/dist/debug/.rsdoctor/manifest.json --port 3301",
		"test": "deno run tests/index.js",
		"testsDeno": "deno run --allow-all tests/deno/index.ts",
		"testsBrowser": "echo 'Unsupported at the moment'",
		"buildSW": "rspack build -c rspack.config.ts",
		"debugBuildSW": "rspack --stats-error-detail --watch --info-verbosity",
		"start": "pm2 start ecosystemDeno.config.cjs --only \"aero-dev-server,aero-build-watch,aero-sandbox-build-watch\"",
		"liveBuildSW": "pm2 start ecosystemDeno.config.cjs --only \"aero-build-watch,aero-sandbox-build-watch\"",
		"liveBuildWinter": "pm2 start ecosystemDeno.config.cjs --only \"aero-build-winterjs,aero-sandbox-build-watch\", \"",
		"liveBuildCFWorkers": "pm2 start ecosystemDeno.config.cjs --only \"aero-build-cf-workers,aero-sandbox-build-watch\", \"",
		"liveBuildAeroSandbox": "pm2 start ecosystemDeno.config.cjs --only \"aero-sandbox-build-watch\"",
		"syncPackageJson": "deno run --allow-read --allow-write --allow-net ./scripts/syncPackageJson",
		"initGlobalsBiome": "deno run --allow-read --allow-write ./scripts/initGlobalsBiome.ts",
		"initGlobalsTs": "deno run --allow-read --allow-write ./scripts/initGlobalsTs.ts"
	},
	"include": ["scripts/**/*.ts", "tests/deno/**/*.ts"],
	"exclude": ["src/AeroSandbox/scripts/runtime/**/*.ts", "src"],
	"lint": {
		"include": ["scripts/**/*.ts", "tests/deno/**/*.ts"],
		"exclude": ["src/AeroSandbox/scripts/runtime/**/*.ts", "src"]
	},
	"fmt": {
		"include": ["scripts/**/*.ts", "tests/deno/**/*.ts"],
		"exclude": ["src/AeroSandbox/scripts/runtime/**/*.ts", "src"],
		"useTabs": true,
		"indentWidth": 4,
		"semiColons": true,
		"singleQuote": false,
		"proseWrap": "never",
		"lineWidth": 10000
	},
	"imports": {
		"@std/path": "jsr:@std/path@^1.0.6"
	}
}
